:intro

Hello everybody!

Several years ago I faced with very interesting and non trivial situation with one project which was already in prodcution phase, but has significant issues with performance and stability. So, based on this experience I want to tell you about memory management in .net, garbage collecting and memory leak avoidance.

My name is Yuriy Shapovalov, I am a Senior Software Engineer in EPAM Systems. I'm working in Kharkov office in Ukraine. And I am available by following contacts.

:agenda

First of all, we are starting from the problem, I was described previosly. About issues which may affect well designed and tested solution on production.

Then we will talk about garbage collection in general, and how it is implemented in .NET. In latest version of .NET 4.5, garbage collector component has been updated, so I will try to explane promoted features.

Then I will show what is a memory leak, potential sources of memory leak in .net and how it can affect application. We also consider several examples which are produce memory leaks, just to understand how can trivial block of code be a problem for garbage collector.

And at the end I will show several tools which might be helpful for memory profiling and leak detection. These tools might be useful during development and debugging, some of them might be deployed to production server and notify you when some problem with memory has occurd.

:problem in production














